let a=10;
let b=20;
let c=30;
function addNum(a,b,c){
console.log("numbers added sucessfully");
return a+b+c;
}
console.log(addNum(1,2,3));
const subNum=(b,c)=>{
console.log("substraction done sucessfully");
return b-c;
}
console.log(subNum(b,c))


practise question:

let obj={
krishna:90,
nitisha:22,
nikitha:91,
nivedita:99
}

for(let i=0;i<Object.keys(obj).length;i++){
console.log("the marks of "+Object.keys(obj)[i]+" are "+obj[Object.keys(obj)[i]]);

}

2:
let cn=420;
let i;
while(i!=cn){
i=prompt("Enter the num");
i=Number.parseInt(i);
console.log("try again");
}
console.log("u have entered correct number");

3:
const mean=(a,b,c,d,e)=>{
return a+b+c+d+e;
}
console.log(mean(1,2,3,4,5));


//string interpolation

let k="krish\'na"
console.log(k);
console.log(k.length)

\n=newLine
\t=newTab

/String methods 

trim(),length,concat(),replace(),toUpperCase(),toLowerCase(),slice(1,3) etc
let c='dog'
let str="the quick brawn fox jumps over a lazy dog";
console.log(str.includes(${c}))
console.log("The word" ${c}"${str.includes(c)?'is':'not'} in the sentense")

//we can use `` sequence where we can include both double quotes and as well as single quote called as string interpolation


let name="krishna";
let sentense="krishna travel from bangalore to gadag on monthly basis";
console.log(sentense.includes("${name}"));
console.log(`the named "${name}" ${sentense.includes(name)?'move':'notMove'} from one place to anather on Monthly basis`)

console.log(`the named "${name}" ${sentense.startWith(name)?'correct':fake} Guy `)

//converting string from uppercase to lower case

let a="krishna";
console.log(a.toUpperCase())


let k="the quick brawn fox jumps over a lazy dog";
console.log(k.slice("the quick brawn fox jumps over a lazy".length));


//Arrays in js are treated as objects 
//Arrays are mutable
//But strings are immutable
//typeOf(Arrays) is an object

//we can add delete an elements in an array so we come with the special methods those are push(),pop(),shift(),unshift()
push()=push method add elemet in an rear end and returns a length of an array
pop()=pop method removes a element in an array and return the popped element
shift()=shift method removes an element in an front end and returns shiftted element
unshift()=unshift adds an element in front end and returns a length of an array
//to convert array to string we use toString(),
//we can use a join method in an array to join and returns a type as String




let arr=[1,2,3,4];

//toString
r=arr.toString();

arr.pop()
console.log(arr);
r=arr.push(55);
r=arr.shift()

r=arr.unshift(99);

//Delete Operator:Arrays elements are deleted by using delete operator

let arr=[1,2,3,4,5];
delete arr[1];

//concat operator

let a=[1,2,3]
let b=[4,5,6]
let c=[7,8,9];
let new_arr=a.concat(b,c);
console.log(new_arr);

let q=[999,23,45,65,32];
let comparator=(a,b)=>{return a-b;}
let desc=(p,q)=>{return b-a;}
console.log(q.sort(comparator));
console.log(q.sort(desc));


//diference between slice and splice() in an array
let q=[23,4,54,65,77];
q.splice(start,how much members u want to delete,numbers or literals);
q.splice(1,1,22,23,24,25);

//slice()
let g=[99,5,43,432,55];
g.slice(2);
//in slice method it is observed that it will remove the elements from the rear end
q.slice(2)
//reverse():
g.reverse()//it will reverse the entire array

//usage of for ,forEach,for_in,for_of

let k=[1,2,3,4,6,7,8];
for(let i=0;i<k.length;i++){
console.log(k[i]);
}
Arrays.from();
//in above it converts into an array if it is not an array
let a="harry";
a=Arrays.from(a);

//Higher Order Functions map,filter, and reduce method

map and filter forms an operation and return a new array
but reduce method return a single array
//map help to perform an operation it consists value,index and array
//filter helps us to filter the record
let k=[1,2,3,4,6,7,8];
k.map((a)=>{return a*a})

//filter

k.filter((a)=>{return a>5})

//reduce()

reduce helps us to add the numbers

k.reduce((a,b)=>return a+b;)


///////////////////////////// dated 26/10/2013

//practise question

//create a array of numbers and take a userinput from the browser and add to the existing array?

let a=[1,2,3,4,5];
let b=prompt("Enter the number to be added to the array");
b=Number.parseInt(b);
a.push(b);

create an user input where if user want to continue by using loops same as upper question

let a =[1,2,3,4,5];

let flag=true;
while(flag){
let b=prompt("Enter the Number");
b=Number.parseInt(a);
console.log("do u  want to continue");
console.log("press 1 to continue");
console.log("press 2 to exit");


let k;
if(k==1){
flag=true;
}
else{
flag=false;
}

}